import csv
import re
import logging
from email.message import EmailMessage

import aiohttp
from aiogram import types, filters, F, Router
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiosmtplib import SMTP
from pydantic import BaseModel, EmailStr

import config

router = Router()

{% for func in utils_funcs +%}
{{ func }}

{% endfor -%}

{% for states_group in states_groups +%}
class {{ states_group.name }}(StatesGroup):
    {% for state in states_group.states %}
    {{ state.name }} = State()
    {% endfor +%}
{% endfor -%}


{%for handler in handlers +%}
{{ handler.decorator }}
{{ handler.signature }}
    {% for body_str in handler.body %}
    {{ body_str }}
    {% endfor +%}
{% endfor %}

@router.message(filters.StateFilter(None), filters.CommandStart())
async def handler_command_start(message: types.Message):
{% if start_keyboard %}
    buttons = [
    {% for i in range(0, start_keyboard.buttons|length, 3) %}
        {% set buttons_slice = start_keyboard.buttons[i:i+3] %}
        [
        {% for button in buttons_slice %}
            {{ button }},
        {% endfor %}
        ],
    {% endfor %}
    ]
    start_keyboard = {{ start_keyboard.declaration }}
{% else %}
    start_keyboard = None
{% endif %}

    await message.answer(
        "{{ start_message }}",
        reply_markup=start_keyboard
    )


{% if commands_values %}
@router.message(F.text, filters.Command('help'), filters.StateFilter(None))
async def handler_get_commands(message: types.Message):
    message_text = 'Список доступных команд:\n\n'
    commands = {{ commands_values }}
    for command in commands:
        message_text += f'- {command}'

{% if buttons_values %}
    keyboard = main_menu_keyboard
{% else %}
    keyboard = None
{% endif %}

    await message.answer(
        message_text,
        reply_markup=keyboard
    )
{% endif %}

